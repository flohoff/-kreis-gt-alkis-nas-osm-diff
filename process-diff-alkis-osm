#!/bin/bash

set -e
set -x

BASE=/current

if [ ! -e ${PBFFILE} ]; then
	echo Need PBFFILE in environment
	exit 0
fi

if [ ! -e ${ALKISFILE} ]; then
	echo Need ALKISFILE in environment
	exit 0
fi

# Turn off sync/fsync etc - we throw away the database anyway
echo "fsync=off" >>/etc/postgresql/11/main/postgresql.conf
echo "synchronous_commit=off" >>/etc/postgresql/11/main/postgresql.conf

/etc/init.d/postgresql start

su - postgres -c "createuser root -s"
createdb osm -O root
psql osm -c "create extension postgis;"
psql osm -c "create extension hstore;"
psql osm -c "alter system set maintenance_work_mem = '1GB';"
psql osm -c "SELECT pg_reload_conf();"


time osmium tags-filter \
	-o /tmp/local.pbf \
	${PBFFILE} \
	"a/building" "a/razed:building,demolished:building,removed:building" "a/natural=water" "a/landuse=basin"

time osm2pgsql \
        --create --latlong \
        --number-processes=2 \
        --hstore --extra-attributes \
        --slim --cache 6000 \
        -x \
	-S ${BASE}/buildings.style \
        -d osm -U root \
        /tmp/local.pbf

#time pg_dump osm >/current/debug/osm.pgdump

# Skip indexing - we dont need any of those indexes
# Import NAS/ALKIS dump
zcat ${ALKISFILE} \
	| sed -e 's/CREATE.* INDEX/-- CREATE INDEX/' \
	| psql osm -f -

# Create SRID 4326 shadow column in the ax_gebaeude table
psql osm -c "SELECT AddGeometryColumn ('public','ax_gebaeude','geom',4326,'GEOMETRY',2);"
psql osm -c "update ax_gebaeude set geom = ST_Transform(wkb_geometry, 4326);"
psql osm -c "create index ax_gebaeude_geom_idx on ax_gebaeude using gist (geom);"

psql osm <<EOSQL
select  *
into    ax_gebaeude_diff
from    (
        select  bar.*,
                ST_Area(diff, true) area,
                ST_Area(alkisgeom, true) alkisarea
        from    (
                select  foo.*,
                        coalesce(ST_Difference(alkisgeom, osmgeom), alkisgeom) as diff
                from    (
                        select  g.ogc_fid,
                                g.gml_id,
                                g.geom as alkisgeom,
				g.gebaeudefunktion,
                                ST_Union(p.way) as osmgeom
                        from    ax_gebaeude g
                                left outer join planet_osm_polygon p on ( ST_Intersects(p.way, g.geom) 
					and coalesce(p.tags->'razed:building',p.tags->'demolished:building',p.building) <> '' )
                        where   ( g.lagezurerdoberflaeche is null or g.lagezurerdoberflaeche <> 1200 )
			and	g.gebaeudefunktion not in ( 1310 )
                        group by g.geom,ogc_fid,gml_id,gebaeudefunktion
                        ) foo  
                ) bar
        ) baz
where   area > 5
;       
EOSQL


psql osm -c "SELECT AddGeometryColumn ('public','ax_stehendesgewaesser','geom',4326,'GEOMETRY',2);"
psql osm -c "update ax_stehendesgewaesser set geom = ST_Transform(wkb_geometry, 4326);"
psql osm -c "create index ax_stehendesgewaesser_geom_idx on ax_stehendesgewaesser using gist (geom);"

psql osm <<EOSQL
select  *
into    ax_water_diff
from    (
        select  *,
                ST_Area(diff, true) area,
                ST_Area(alkisgeom, true) alkisarea
        from    (
                select  ogc_fid,
                        gml_id,
                        coalesce(ST_Difference(geom, water), geom) as diff,
                        geom as alkisgeom,
                        water as osmgeomcollection
                from    (
                        select  g.ogc_fid,
                                g.gml_id,
                                g.geom,
                                ST_Union(p.way) as water
                        from    ax_stehendesgewaesser g
                                left outer join planet_osm_polygon p on (
					ST_Intersects(p.way, g.geom)
					and (
						p.natural in ( 'water' )
						or p.landuse in ( 'basin' )
					)
				)
                        group by g.geom,ogc_fid,gml_id
                        ) foo
                ) bar
        ) baz
where   area > 50
;
EOSQL

psql osm <<EOSQL
select  *,
        ST_Area(ST_Transform(diff, 25832)) areadiff
into buildingmerge
from    (
        select  *,
                ST_Difference(geomalkis, geomosm) as diff,
                ST_Area(geomalkis, true) areaalkis,
                ST_Area(geomosm, true) areaosm
        from    (
                select  g.ogc_fid,
                        g.gml_id,
                        g.gebaeudefunktion,
                        p.building,
			p.power,
                        p.osm_id,
                        p.way as geomosm,
                        g.geom as geomalkis
                from    ax_gebaeude g
                        left outer join planet_osm_polygon p on ( ST_Intersects(p.way, g.geom) and p.building <> '' )
                where   ( g.lagezurerdoberflaeche is null or g.lagezurerdoberflaeche <> 1200 ) 
                ) intersections
        ) areas
;
EOSQL

psql osm <<EOSQL
select  *
into    buildingmisclassified
from    (
        select  ogc_fid,gml_id,geomalkis as geom,areaalkis,areaosm,osm_id,gebaeudefunktion,building,
                'Not garage or garages (' || building || ')' as error,
                'red' as style
        from    buildingmerge
        where   areadiff < areaalkis*0.1
        and     gebaeudefunktion = 2463
        and     building is not null
	and	building not in ( 'garage', 'garages' )
	and	geomalkis is not null
	union all
	select  ogc_fid,gml_id,geomalkis as geom,areaalkis,areaosm,osm_id,gebaeudefunktion,building,
                'Power substation without power tag' as error,
                'cyan' as style
        from    buildingmerge
        where   areadiff < areaalkis*0.1
        and     gebaeudefunktion = 2523
	and	power is null
	and	geomalkis is not null
	union all
	select  ogc_fid,gml_id,geomalkis as geom,areaalkis,areaosm,osm_id,gebaeudefunktion,building,
                'Shed not tagges as shed (' || building || ')' as error,
                'brown' as style
        from    buildingmerge
        where   areadiff < areaalkis*0.1
        and     gebaeudefunktion = 2723
	and	building is not null
	and	building <> 'shed'
	and	geomalkis is not null
        ) foo
;
EOSQL

case ${OUTFILE} in
	*.dump)
		pg_dump -O osm \
			-t ax_gebaeude_diff \
			>${OUTFILE}
		;;
	*.sqlite)
		ogr2ogr -f SQLite \
			-dsco SPATIALITE=YES \
			-nln buildingnotinosm \
			${OUTFILE} \
			PG:"dbname='osm'" \
			-sql "select ogc_fid as nas_ogc_fid, gml_id, gebaeudefunktion, diff as geom, area, alkisarea, 'Area ' || trunc(area) || 'm²' as text, 'default' as style from ax_gebaeude_diff"

		ogr2ogr -f SQLite \
			-append -update \
			-nln waternotinosm \
			${OUTFILE} \
			PG:"dbname='osm'" \
			-sql "select ogc_fid as nas_ogc_fid, gml_id, diff as geom, area, alkisarea, 'Area ' || trunc(area) || 'm²' as text, 'default' as style from ax_water_diff"

		ogr2ogr -f SQLite \
			-append -update \
			-nln misclassified \
			${OUTFILE} \
			PG:"dbname='osm'" \
			-sql "select ogc_fid as nas_ogc_fid,gml_id,gebaeudefunktion,building,geom,error,style from buildingmisclassified"

		chown --reference $(dirname ${OUTFILE}) ${OUTFILE}
		;;
esac

/etc/init.d/postgresql stop
